version: "2"

volumes:
    store_lake:
        external: true

    store_mart:
        external: true

    aquila_logs:
        external: true

    aquila_celery_logs:
        external: true

    redis_data:

services:

    db:
        container_name: postgreslake
        build:
            context: "../"
            dockerfile: docker/postgresDockerfile
        ports:
            - "5433:5432"
        environment:
            - POSTGRES_USER=${LAKE_DB_USER}
            - POSTGRES_PASSWORD=${LAKE_DB_PASSWORD}
            - POSTGRES_DB=${LAKE_DB_NAME}
            - POSTGRES_HOST=${LAKE_DB_HOST}
        volumes:
            - store_lake:/var/lib/postgresql/data
            - ../backup/migrate.load:/migrate.load

    db_mart:
        container_name: postgres
        image: postgres:latest
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=${MART_DB_USER}
            - POSTGRES_PASSWORD=${MART_DB_PASSWORD}
            - POSTGRES_DB=${MART_DB_NAME}
            - POSTGRES_HOST=${MART_DB_HOST}
        volumes:
            - store_mart:/var/lib/postgresql/data

    app:
        build:
            context: "../"
            dockerfile: docker/Dockerfile
        restart: always
        depends_on:
            - db_mart
            - db
        container_name: aquila
        links:
            - db_mart
            - db
        env_file:
            - ../.env
        ports:
            - "8000:8000"
        volumes:
            - ../:/code
            - aquila_logs:/var/log
        command: python3 manage.py runserver 0.0.0.0:8000

    redis:
        image: "redis:alpine"
        restart: always
        container_name: 'redis'
        ports:
            - '127.0.0.1:6379:6379'
        volumes:
            - 'redis_data:/data'

    celery:
        build:
            context: "../"
            dockerfile: docker/Dockerfile
        command: celery -A aquila worker -l info
        volumes:
            - aquila_celery_logs:/var/log/aquila_celery.log
        container_name: aquilaWorker
        depends_on:
            - db_mart
            - db
            - redis
        env_file:
            - ../.env

    celery-beat:
        build:
            context: "../"
            dockerfile: docker/Dockerfile
        command: celery -A aquila beat -l info --pidfile=
        volumes:
            - aquila_celery_logs:/var/log/aquila_celery.log
        container_name: aquilaBeat
        depends_on:
            - db_mart
            - db
            - redis
        env_file:
            - ../.env
